name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: List build/libs contents
        run: ls -l build/libs/

      - name: Find JAR File
        run: |
          JAR_FILE=$(ls -S build/libs/*.jar | grep -v plain | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "ERROR: No JAR file found!"
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV
          echo "Selected JAR File: $JAR_FILE"

      - name: Rename JAR File for Docker
        run: |
          echo "Renaming $JAR_FILE to app.jar..."
          mv $JAR_FILE build/libs/app.jar
          ls -l build/libs/
      

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/common-sense-app:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/common-sense-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Debug - Check Kubernetes files
        run: ls -l k8s/

      - name: Deploy to Kubernetes
        env:
           KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG_DATA" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl apply --validate=false -f k8s/deployment.yaml
